name: Create and push PR Docker image

on:
  workflow_dispatch:
  push:
    branches: ["stable", "develop", "feature/redesign"]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  PROXY_API_URL: ${{ secrets.API_IP }}
  PROXY_API_KEY: ${{ secrets.API_KEY }}  

jobs:
  create-deployment:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Create Deployment
        run: |
          echo "Creating Deployment..."
          response=$(curl -X POST \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ github.repository }}/deployments" \
            -d '{
              "ref": "${{ github.sha }}",
              "auto_merge": false,
              "environment": "review",
              "description": "Review App Deployment"
            }')
          echo "$response" >> deployment_response.json
          echo "Deployment created successfully."

  build-and-push-image:
    runs-on: ubuntu-latest
    needs: create-deployment
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Update Nginx configuration
        run: |
          sed -i "s|proxy_pass.*|proxy_pass $PROXY_API_URL;|" conf/nginx.conf
          sed -i "s|proxy_set_header.*|proxy_set_header Authorization 'Bearer $PROXY_API_KEY';|" conf/nginx.conf

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,format=long

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy-review-app:
    runs-on: ubuntu-latest
    needs: build-and-push-image
    permissions:
      contents: read
      packages: read

    env:
      DEPLOYMENT_RESPONSE: ${{ needs.create-deployment.outputs.deployment_response }}
      NOMAD_TOKEN: ${{ secrets.NOMAD_TOKEN }}
      NOMAD_ADDR: https://noamd.direktiv.dev:4646
      NOMAD_VAR_IMAGE: ghcr.io/${{ github.repository }}:sha-${{ github.sha }}

    steps:
      - name: Parse Deployment Response
        id: parse-deployment
        run: |
          echo "Parsing Deployment Response..."
          deployment_id=$(jq -r '.id' "$DEPLOYMENT_RESPONSE")
          echo "Deployment ID: $deployment_id"
          echo "::set-output name=deployment_id::$deployment_id"

      - uses: actions/checkout@v2
      - uses: lucasmelin/setup-nomad@v1
        with:
          version: "1.5.5"

      - name: Run nomad job
        timeout-minutes: 4
        run: |
          sed -i "s/DEPLOYMENT_NAME/${GITHUB_REF////-}/g" deploy.nomad
          nomad validate deploy.nomad
          nomad run deploy.nomad

      - name: Set Deployment Status (Success)
        if: ${{ always() }}
        run: |
          echo "Setting Deployment Status (Success)..."
          deployment_id=${{ needs.deploy-review-app.outputs.deployment_id }}
          curl -X POST \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ github.repository }}/deployments/$deployment_id/statuses" \
            -d '{
              "state": "success",
              "environment": "review",
              "description": "Deployment successful!",
              "target_url": "https://direktiv-ui-${GITHUB_REF////-}.direktiv.dev"
            }'

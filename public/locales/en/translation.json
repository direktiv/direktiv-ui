{
  "pages": {
    "onboarding": {
      "welcomeTo": "Welcome to",
      "noNamespace": "Create a namespace to get started.",
      "createNamespaceBtn": "Create namespace",
      "tokenRequired": "An authentication token is required to connect to the API.",
      "links": {
        "docs": {
          "title": "Getting started",
          "description": "Read our docs"
        },
        "slack": {
          "title": "Slack",
          "description": "Join our Open Source Support channel on Slack"
        },
        "github": {
          "title": "Github",
          "description": "Check out our Github repository"
        }
      }
    },
    "explorer": {
      "tree": {
        "list": {
          "oneLevelUp": "..",
          "contextMenu": {
            "title": "Edit",
            "delete": "Delete",
            "rename": "Rename"
          },
          "empty": {
            "title": "this directory is empty",
            "createWorkflow": "Create Workflow",
            "createDirectory": "Create Directory"
          }
        },
        "rename": {
          "title": "Rename",
          "renameBtn": "Rename",
          "cancelBtn": "Cancel",
          "nameAlreadyExists": "The name already exists"
        },
        "newDirectory": {
          "title": "Create a new directory",
          "nameLabel": "Name",
          "folderPlaceholder": "folder-name",
          "nameAlreadyExists": "The name already exists",
          "createBtn": "Create",
          "cancelBtn": "Cancel"
        },
        "delete": {
          "title": "Delete",
          "commonMsg": "Are you sure you want to delete <b>{{name}}</b>? This cannot be undone.",
          "directoryMsg": "All content of this directory will be deleted as well.",
          "cancelBtn": "Cancel",
          "deleteBtn": "Delete"
        },
        "header": {
          "newBtn": "New",
          "createLabel": "Create",
          "newDirectory": "New Directory",
          "newWorkflow": "New Workflow"
        },
        "newWorkflow": {
          "title": "Create a new workflow",
          "nameLabel": "Name",
          "namePlaceholder": "workflow-name.yaml",
          "templateLabel": "Template",
          "nameAlreadyExists": "The name already exists",
          "cancelBtn": "Cancel",
          "createBtn": "Create"
        },
        "workflow": {
          "revisions": {
            "overview": {
              "trafficShaping": {
                "title": "Traffic Shaping",
                "description": "Change the way the traffic for this workflow is distributed between two different revisions.",
                "setup": "The traffic will be split between <b>{{aName}}</b> and <b>{{bName}}</b> with a ratio of <b>{{aWeight}}</b> to <b>{{bWeight}}</b> %",
                "hint": "Please select 2 different revisions to configure traffic shaping.",
                "saveBtn": "Save",
                "revisionSelector": {
                  "placeholder": "Select Revision...",
                  "searchPlaceholder": "Search Revisions...",
                  "tags": "Tags",
                  "revisions": "Revisions",
                  "notFound": "No Revisions found."
                }
              },
              "list": {
                "title": "Revisions",
                "distribution": "{{count}} % of traffic distribution",
                "contextMenu": {
                  "title": "Actions",
                  "delete": "Delete",
                  "tag": "Create Tag",
                  "revert": "Revert to Revision"
                },
                "delete": {
                  "titleTag": "Delete Tag",
                  "titleRevision": "Delete Revision",
                  "description": "Are you sure you want to delete <b>{{name}}</b>? This cannot be undone.",
                  "revisionNote": "Please note that this will also delete all corresponding tags as well.",
                  "cancelBtn": "Cancel",
                  "deleteBtn": "Delete"
                },
                "tag": {
                  "titleTag": "Create a Tag",
                  "description": "You are about to create a tag based on <b>{{name}}</b>.",
                  "tagAlreadyExist": "This tag already exists.",
                  "cancelBtn": "Cancel",
                  "createBtn": "Create Tag"
                },
                "revert": {
                  "title": "Revert to Revision",
                  "description": "Are you sure you want to revert to <b>{{name}}</b>?",
                  "cancelBtn": "Cancel",
                  "revertBtn": "Revert",
                  "error": {
                    "title": "Error",
                    "description": "Something went wrong reverting this workflow."
                  },
                  "success": {
                    "title": "Successfully reverted",
                    "description": "Your workflow was reverted to {{name}}.",
                    "action": "Open workflow"
                  }
                }
              },
              "detail": {
                "backBtn": "Revisions List",
                "readOnlyNote": "You cannot edit an old revision",
                "revertBtn": "Revert"
              }
            }
          },
          "runWorkflow": {
            "title": "Run Workflow",
            "jsonInput": "JSON Input",
            "formInput": "Form Input",
            "formInputHint": "The first state of this Workflow must be of type 'validate' to generate a form.",
            "learnMoreBtn": "Learn more",
            "cancelBtn": "Cancel",
            "runBtn": "Run"
          }
        }
      },
      "workflow": {
        "menu": {
          "activeRevision": "Active Revision",
          "revisions": "Revisions",
          "overview": "Overview",
          "settings": "Settings"
        },
        "headline": "Latest",
        "updated": "Updated {{relativeTime}} ago",
        "runBtn": "Run",
        "editor": {
          "unsavedNote": "unsaved changes",
          "theresOneIssue": "There is an issue",
          "revisionsBtn": "Revisions",
          "makeRevision": "Make Revision",
          "revertToPrevious": "Revert to previous revision",
          "runBtn": "Run",
          "saveBtn": "Save",
          "layout": {
            "code": "Code View",
            "diagram": "Diagram View",
            "splitVertically": "Split Vertically",
            "splitHorizontally": "Split Horizontally"
          }
        }
      }
    },
    "instances": {
      "list": {
        "title": "Recently executed instances",
        "empty": {
          "noInstances": "There are no recently executed instances",
          "noFilterResults": "No recently executed instances found with these filter criteria"
        },
        "tableHeader": {
          "name": "name",
          "id": "id",
          "invoker": "trigger",
          "state": "state",
          "startedAt": "started at",
          "updatedAt": "last updated",
          "childInstances": {
            "label": "spawned",
            "updateTooltip": "refetch child instances",
            "instanceCount": "{{count}} instances",
            "instanceCountMax": "+ {{count}} instances",
            "searchPlaceholder": "Search child instances...",
            "searchPlaceholderMax": "Search the latest {{count}} child instances...",
            "notFound": "No child instances found."
          }
        },
        "tableRow": {
          "realtiveTime": "{{relativeTime}} ago",
          "openWorkflowTooltip": "click to open workflow"
        },
        "filter": {
          "filterButton": "Filter",
          "menuHeading": {
            "main": "Select filter",
            "AS": "filter by name",
            "STATUS": "filter by status",
            "TRIGGER": "filter by trigger",
            "AFTER": "filter created after",
            "BEFORE": "filter created before",
            "time": "Refine time"
          },
          "field": {
            "AS": "name",
            "STATUS": "status",
            "TRIGGER": "trigger",
            "AFTER": "created after",
            "BEFORE": "created before"
          },
          "placeholder": {
            "mainMenu": "Type or select a field...",
            "AS": "filename.yaml",
            "STATUS": "Type or select status...",
            "TRIGGER": "Type or select trigger type..."
          }
        }
      },
      "detail": {
        "header": {
          "openWorkflow": "Open workflow",
          "invoker": "trigger",
          "state": "state",
          "startedAt": "started at",
          "updatedAt": "last updated",
          "realtiveTime": "{{relativeTime}} ago"
        },
        "logs": {
          "title": "Logs",
          "followLogs": "Follow logs",
          "logsCount": "received {{count}} log entries",
          "logsCount_one": "received {{count}} log entry",
          "tooltips": {
            "verbose": "Verbose logs",
            "wordWrap": "Word wrap",
            "copy": "Copy logs",
            "minimize": "Minimize logs",
            "maximize": "Maximize logs"
          },
          "filter": {
            "filterButton": "Filter",
            "menuHeading": {
              "main": "Select filter",
              "workflowName": "workflow name",
              "stateName": "state name"
            },
            "field": {
              "workflowName": "workflow name",
              "stateName": "state name"
            },
            "placeholder": {
              "mainMenu": "Type or select a field...",
              "workflowName": "/path/filename.yaml",
              "stateName": "someStateName"
            }
          }
        },
        "diagram": {
          "minimizeInput": "Minimize diagram",
          "maximizeInput": "Maximize diagram"
        },
        "inputOutput": {
          "copyInput": "Copy input",
          "minimizeInput": "Minimize input",
          "maximizeInput": "Maximize input",
          "copyOutput": "Copy output",
          "minimizeOutput": "Minimize output",
          "maximizeOutput": "Maximize output",
          "tabs": {
            "input": "Input",
            "output": "Output"
          },
          "output": {
            "stillRunningMsg": "The workflow is still running",
            "noOutputMsg": "no output data was resolved"
          }
        }
      }
    },
    "settings": {
      "generic": {
        "contextMenu": {
          "title": "Actions",
          "delete": "Delete",
          "edit": "Edit"
        }
      },
      "secrets": {
        "list": {
          "title": "Secrets",
          "empty": "No secrets exist yet"
        },
        "delete": {
          "description": "Are you sure you want to delete <b>{{name}}</b>?<br/> This cannot be undone."
        },
        "create": {
          "description": "Add a secret",
          "name": "Name"
        }
      },
      "registries": {
        "list": {
          "title": "Container Registries",
          "empty": "No registries exist yet"
        },
        "delete": {
          "description": "Are you sure you want to delete <b>{{name}}</b>?<br/> This cannot be undone."
        },
        "create": {
          "description": "Add a container registry",
          "url": "URL",
          "user": "User",
          "password": "Password"
        }
      },
      "variables": {
        "list": {
          "title": "Variables",
          "empty": "No variables exist yet"
        },
        "delete": {
          "description": "Are you sure you want to delete <b>{{name}}</b>?<br/> This cannot be undone."
        },
        "create": {
          "title": "Add a variable",
          "name": "Name"
        },
        "edit": {
          "title": "Edit {{name}}",
          "name": "Name",
          "mimeType": {
            "label": "Mimetype",
            "placeholder": "Select a mimetype"
          }
        }
      },
      "broadcasts": {
        "title": "Broadcasts",
        "columns": {
          "success": "Success",
          "start": "Started",
          "fail": "Failed",
          "create": "Created",
          "update": "Updated",
          "delete": "Deleted"
        },
        "rows": {
          "instance": "Instance",
          "directory": "Directory",
          "workflow": "Workflow",
          "instanceVariable": "Instance Variable",
          "namespaceVariable": "Namespace Variable",
          "workflowVariable": "Workflow Variable"
        }
      },
      "theme": {
        "title": "Theme"
      },
      "namespace": {
        "title": "Namespace"
      },
      "apiKey": {
        "title": "Api Key"
      },
      "version": {
        "title": "Version"
      },
      "namespacesList": {
        "title": "Namespaces"
      }
    }
  },
  "components": {
    "mainMenu": {
      "explorer": "Explorer",
      "monitoring": "Monitoring",
      "instances": "Instances",
      "events": "Events",
      "gateway": "Gateway",
      "permissions": "Permissions",
      "services": "Services",
      "settings": "Settings"
    },
    "breadcrumb": {
      "searchPlaceholder": "Search namespace...",
      "notFound": "No namespace found.",
      "createBtn": "Create new namespace",
      "loading": "loading...",
      "instances": "Instances"
    },
    "namespaceCreate": {
      "title": "Create a new namespace",
      "createBtn": "Create",
      "nameAlreadyExists": "The name already exists",
      "cancelBtn": "Cancel",
      "tab": {
        "namespace": "Namespace",
        "mirror": "Mirror"
      },
      "authType": {
        "none": "none",
        "ssh": "SSH",
        "token": "token"
      },
      "placeholder": {
        "name": "new-namespace-name",
        "ref": "branch or commit hash",
        "httpUrl": "https://example.com/direktiv/repo.git",
        "gitUrl": "git@example.com/direktiv/repo.git",
        "passphrase": "Passphrase (optional)",
        "publicKey": "Public Key (required)",
        "privateKey": "Private Key (required)",
        "token": "token",
        "authType": "Select authentication method"
      },
      "label": {
        "name": "Name",
        "ref": "Ref",
        "url": "Url",
        "passphrase": "Passphrase",
        "publicKey": "Public key",
        "privateKey": "Private key",
        "token": "Token",
        "authType": "Auth type"
      },
      "tooltip": {
        "url": "URL to repository. If auth method is SSH, a git url must be used, e.g. 'git@github.com:direktiv/apps-svc.git'. All other auth methods must use HTTP/S urls.",
        "ref": "Repository reference to sync from. For example this could be a commit hash ('b139f0e') or branch ('main').",
        "token": "Personal access token (for authentication with a HTTP/S url).",
        "passphrase": "Passphrase to decrypt keys (optional).",
        "privateKey": "Private SSH key used for authentication via git@ url.",
        "publicKey": "Public SSH key used for authenticating via git@ url."
      }
    },
    "button": {
      "label": {
        "cancel": "Cancel",
        "create": "Create",
        "delete": "Delete",
        "save": "Save"
      }
    },
    "dialog": {
      "header": {
        "confirm": "Confirmation required"
      }
    },
    "formErrors": {
      "fieldInvalid": "this field is invalid"
    },
    "userMenu": {
      "loggedInAs": "You are logged in as {{name}}",
      "logout": "Logout",
      "appearance": "Appearance",
      "switchToLight": "switch to Light mode",
      "switchToDark": "switch to Dark mode",
      "help": "Help",
      "showApiCommands": "Show API Commands",
      "openJQPlayground": "Open JQ Playground",
      "supportChannelOnSlack": "Support Channel on Slack"
    }
  },
  "api": {
    "generic": {
      "error": "An error occurred"
    },
    "tree": {
      "mutate": {
        "setRouter": {
          "success": {
            "title": "Traffic shaping was updated",
            "description": "The traffic will be split between <b>{{aName}}</b> and <b>{{bName}}</b> with a ratio of <b>{{aWeight}}</b> to <b>{{bWeight}}</b> %"
          },
          "error": "could set traffic shaping"
        },
        "createDirectory": {
          "success": {
            "title": "Directory created",
            "description": "Directory {{directory}} was created in {{path}}"
          },
          "error": {
            "description": "could not create directory 😢"
          }
        },
        "createRevision": {
          "success": {
            "title": "Revision created",
            "description": "Revision {{name}} was created",
            "action": "Open Revision"
          },
          "error": {
            "description": "could not create revision 😢"
          }
        },
        "createTag": {
          "success": {
            "title": "Tag created",
            "description": "Tag {{name}} was created"
          },
          "error": {
            "description": "could not create tag 😢"
          }
        },
        "createWorkflow": {
          "success": {
            "title": "Workflow created",
            "description": "Workflow {{name}} was created in {{path}}"
          },
          "error": {
            "description": "could not create workflow 😢"
          }
        },
        "deleteNode": {
          "success": {
            "title": "{{type}} deleted",
            "description": "{{name}} was deleted"
          },
          "error": {
            "description": "could not delete 😢"
          }
        },
        "deleteRevision": {
          "success": {
            "title": "revision deleted",
            "description": "revision {{name}} was deleted"
          },
          "error": {
            "description": "could not delete 😢"
          }
        },
        "deleteTag": {
          "success": {
            "title": "tag deleted",
            "description": "tag {{name}} was deleted"
          },
          "error": {
            "description": "could not delete 😢"
          }
        },
        "renameNode": {
          "success": {
            "title": "{{type}} renamed",
            "description": "{{name}} was renamed"
          },
          "error": {
            "description": "could not rename 😢"
          }
        },
        "revertRevision": {
          "success": {
            "title": "Restored workflow",
            "description": "The latest revision was restored"
          },
          "error": {
            "description": "could not revert workflow 😢"
          }
        }
      }
    },
    "namespaces": {
      "mutate": {
        "createNamespaces": {
          "success": {
            "title": "Create a new namespace",
            "description": "Namespace {{name}} was created successfully."
          },
          "error": {
            "description": "could not create namespace 😢"
          }
        }
      }
    },
    "registries": {
      "mutate": {
        "createRegistry": {
          "success": {
            "title": "Registry created",
            "description": "Registry {{name}} was created."
          },
          "error": {
            "description": "Could not create registry 😢"
          }
        },
        "deleteRegistry": {
          "success": {
            "title": "Registry deleted",
            "description": "Registry {{name}} was deleted."
          },
          "error": {
            "description": "Could not delete registry 😢"
          }
        }
      }
    },
    "variables": {
      "mutate": {
        "updateVariable": {
          "success": {
            "title": "Variable saved",
            "description": "Variable {{name}} was saved."
          },
          "error": {
            "description": "Could not save variable 😢"
          }
        },
        "deleteVariable": {
          "success": {
            "title": "Variable deleted",
            "description": "Variable {{name}} was deleted."
          },
          "error": {
            "description": "Could not delete variable 😢"
          }
        }
      }
    },
    "secrets": {
      "mutate": {
        "createSecret": {
          "success": {
            "title": "Secret created",
            "description": "Secret {{name}} was created."
          },
          "error": {
            "description": "Could not create secret 😢"
          }
        },
        "deleteSecret": {
          "success": {
            "title": "Secret deleted",
            "description": "Secret {{name}} was deleted"
          },
          "error": {
            "description": "Could not delete secret 😢"
          }
        }
      }
    }
  }
}